{"version":3,"sources":["Components/Order/Order.module.css","Components/Order/Order.js","Containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","price","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCgCXC,EA9BD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MARL,IAQaI,EAAGJ,KARhB,KAQwBI,EAAGH,OAR3B,QAUX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaN,EAAMmB,U,gCCpBnCC,E,4LAGEC,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,+BAGtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIL,KAAKrB,MAAM2B,UACXF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAAAR,GAAK,OAChC,kBAACmB,EAAD,CACIH,IAAKhB,EAAM6B,GACX3B,YAAaF,EAAME,YACnBkB,MAAOpB,EAAMoB,YAKrB,6BACKM,O,GAlBII,aAuCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMhC,MAAM0B,OACpBE,QAASI,EAAMhC,MAAM4B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.056b1647.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Jn93\"};","import React from 'react';\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n    for(let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name: ingredientName, \n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize', \n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}> {ig.name} ({ig.amount})</span>\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {props.price}</strong></p>\n        </div>\n    );\n}\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../Components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n    render(){\n        let orders = <Spinner />\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients={order.ingredients}\n                    price={order.price}\n                />\n            ));\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}