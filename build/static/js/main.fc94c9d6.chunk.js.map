{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Aux/Aux.js","store/actions/bugerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","Components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/Navigation/Toolbar/Toolbar.module.css","Components/UI/Button/Button.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Button/Button.module.css","Components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Spinner/Spinner.module.css","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/Burger/OrderSummary/OrderSummary.js","Containers/BurgerBuilder/BurgerBuilder.js","Containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/bugerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","res","console","log","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","err","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","Button","btnType","join","disabled","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","map","Array","_","i","reduce","acc","val","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","exact","to","link","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Fragment","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatePurchaseState","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disableInfo","ings","orderSumary","burger","Spinner","onIngredientAdded","onIngredientRemoved","totalPrice","burgerBuilder","ingName","actions","Logout","onLogout","Checkout","React","lazy","Orders","Auth","App","onTryAutoSignup","routes","render","fallback","component","Boolean","window","location","hostname","match","intitalState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","setIngredient","fetchIngredientsFailed","reducer","intialState","loading","purchased","purchaseBurgerStart","newOrder","fetchOrderStart","fetchOrdersSuccess","initialState","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc94c9d6.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'; \nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n} \n\nexport const checkValidity = (value, rules) => {debugger\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","const aux = (props) => props.children;\n\nexport default aux;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get(\"https://react-burger-3fd08.firebaseio.com/ingredients.json\")\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n            });\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id, \n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n        \n    }\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            })\n    }\n}\n\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n            .then(response => {\n                const fetchedOrders = [];\n                for(let key in response.data){\n                    fetchedOrders.push({\n                        ...response.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(error => {\n                dispatch(fetchOrdersFail(error));\n            })\n    }\n    \n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => { \n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDClafEOgla0gJRgJChl--3zS6V9plYXWw';\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDClafEOgla0gJRgJChl--3zS6V9plYXWw';\n        }\n        axios.post(url, authData)\n            .then(res => {\n                console.log(res);\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\n                localStorage.setItem('token', res.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', res.data.localId);\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\n                dispatch(checkAuthTimeout(res.data.expiresIn))\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            dispatch(logout());\n        }else{\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate > new Date()) {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/ 1000));\n            }else{\n                dispatch(logout());\n                \n            }\n        }\n    }\n}","export {\n    addIngredient,\n    removeIngredient,\n    initIngredients\n} from './bugerBuilder';\n\nexport {\n    purchaseBurger,\n    purchaseInit,\n    fetchOrders\n} from './order';\n\nexport {\n    auth,\n    logout,\n    setAuthRedirectPath,\n    authCheckState\n} from './auth';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__-x6Yh\",\"BreadTop\":\"BurgerIngredient_BreadTop__1yllD\",\"Seeds1\":\"BurgerIngredient_Seeds1__255Ht\",\"Seeds2\":\"BurgerIngredient_Seeds2__JYYsa\",\"Meat\":\"BurgerIngredient_Meat__bD7cL\",\"Cheese\":\"BurgerIngredient_Cheese__2-ge0\",\"Salad\":\"BurgerIngredient_Salad__aDrd1\",\"Bacon\":\"BurgerIngredient_Bacon__3Kf7c\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://react-burger-3fd08.firebaseio.com/\"\n});\n\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__mBwT_\",\"Open\":\"SideDrawer_Open__2YCRM\",\"Close\":\"SideDrawer_Close__1KiEK\",\"Logo\":\"SideDrawer_Logo__3Cl7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__b_bIv\",\"Label\":\"BuildControl_Label__10iUW\",\"Less\":\"BuildControl_Less__20jsZ\",\"More\":\"BuildControl_More__1j5pS\"};","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react'\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentDidUpdate() {\n        // console.log(\"[Modal] DidUpdate\");\n    }\n\n    render(){\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__24NhD\",\"Logo\":\"Toolbar_Logo__3AGXq\",\"DesktopOnly\":\"Toolbar_DesktopOnly__CitsQ\"};","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        className={[classes.Button, classes[props.btnType]].join(\" \")}\n        onClick={props.clicked}\n        disabled={props.disabled}\n    >{props.children}</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1yhtf\",\"active\":\"NavigationItem_active__2ySZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2s5MW\",\"OrderButton\":\"BuildControls_OrderButton__1p9QS\",\"enable\":\"BuildControls_enable__3CJAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"Success\":\"Button_Success__1BGa4\",\"Danger\":\"Button_Danger__18hgc\"};","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        };\n\n        constructor(props) {\n            super(props)\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({\n                    error: error\n                });\n            })\n        }\n\n        componentWillUnmount() {\n            // console.log(\"Will unmound\", this.reqInterceptor, this.resInterceptor);\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null });\n        }\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react'\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n    \n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\n\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport { withRouter } from 'react-router-dom';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(key => {\n            return [...Array(props.ingredients[key])].map((_, i) => {\n                return <BurgerIngredient key={key + i} type={key} />;\n            })\n        })\n        .reduce((acc, val) => {\n            return acc.concat(val);\n        },[]);\n    if(transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default withRouter(burger);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__yqy_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__13L9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2h9XM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3cPEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3aj9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__-GjUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2C0iS\",\"load5\":\"Spinner_load5__2JQDE\"};","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            activeClassName={classes.active}\n            exact\n            to={props.link} >{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n        { props.isAuthenticated  ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null }\n        { props.isAuthenticated \n            ? <NavigationItem link=\"/logout\">Logout</NavigationItem>\n            : <NavigationItem link=\"/auth\">Authenticate</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../../Components/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(\" \")} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n\n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;","import React, { Component } from 'react'\nimport classes from './Layout.module.css';\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({\n            showSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer};\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport classes from './BuildControl.module.css';\n\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}\n        >Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad'},\n    { label: 'Bacon', type: 'bacon'},\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button \n            className={classes.OrderButton} \n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'Singup to Order'}</button>\n    </div>\n)\n\nexport default buildControls;","import React, { Component } from 'react'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    //This can be a functional component.\n    componentDidUpdate() {\n        // console.log(\"[OrderSummary] DidUpdate\");\n    }\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(key => {\n                return (\n                    <li key={key}>\n                        <span style={{ textTransform: 'capitalize' }}>{key}</span>: {this.props.ingredients[key]}\n                    </li>);\n            })\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button>\n            </Aux>\n        );\n    }\n\n}\n\nexport default OrderSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\n\n\nexport class BurgerBuilder extends Component {\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => {\n                return ingredients[key];\n            })\n            .reduce((acc, val) => {\n                return acc + val;\n            }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if(this.props.isAuthenticated) {\n            this.setState({\n                purchasing: true\n            })\n        }else{\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n        \n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({\n            purchasing: false\n        })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push(\"/checkout\");\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.props.ings\n        };\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        let orderSumary = null;\n        let burger = this.props.error ? <p> Ingredients can't be loaded...!</p> : <Spinner />;\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disableInfo}\n                        price={this.props.totalPrice}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        isAuth={this.props.isAuthenticated}\n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>);\n\n            orderSumary = <OrderSummary\n                ingredients={this.props.ings}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler}\n                price={this.props.totalPrice} />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSumary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n \nclass Logout extends Component {\n\n    componentDidMount(){\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to=\"/\" />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component, Suspense } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Logout from './Containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\nconst Checkout = React.lazy(() => import('./Containers/Checkout/Checkout'));\nconst Orders = React.lazy(() => import('./Containers/Orders/Orders'));\nconst Auth = React.lazy(() => import('./Containers/Auth/Auth'));\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" render={() => <Suspense fallback={<div>Loading...</div>}><Auth/></Suspense>} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" render={() => <Suspense fallback={<div>Loading...</div>}><Checkout/></Suspense>} />\n          <Route path=\"/orders\" render={() => <Suspense fallback={<div>Loading...</div>}><Orders/></Suspense>} />\n          <Route path=\"/auth\" render={() => <Suspense fallback={<div>Loading...</div>}><Auth/></Suspense>} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div >\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst intitalState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState);\n}\n\nconst removeIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState);\n}\n\nconst setIngredient = (state, action) => {\n    return updateObject(state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 4,\n        building: false\n    });\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, { error: true });\n}\n\n\nconst reducer = (state = intitalState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredient(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst intialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {purchased: false});\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, { loading: true });\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\n    return updateObject(state, { \n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n     });\n}\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, { loading: false });\n}\n\nconst fetchOrderStart = (state, action) => {\n    return updateObject(state, { loading: true }); \n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, { \n        orders: action.orders,\n        loading: false\n     });\n}\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, { loading: false });\n}\n\nconst reducer = (state=intialState, action) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrderStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\n        default: return state;\n    }\n}\n\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error: null, loading: true});\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error, \n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null});\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path});\n}\n\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/bugerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}